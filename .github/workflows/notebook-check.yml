name: Check Notebook Validity

on:
  push:
    paths:
      - '**.ipynb'
  pull_request:
    paths:
      - '**.ipynb'

jobs:
  validate-notebooks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbformat
    
    - name: Validate Notebooks
      run: |
        python -c "
        import json
        import os
        import glob
        
        notebooks = glob.glob('**/*.ipynb', recursive=True)
        invalid = []
        
        for nb in notebooks:
            try:
                with open(nb, 'r') as f:
                    json.load(f)
                print(f'‚úÖ {nb} - V√ÅLIDO')
            except Exception as e:
                print(f'‚ùå {nb} - INV√ÅLIDO: {e}')
                invalid.append(nb)
        
        if invalid:
            print(f'üö® {len(invalid)} notebooks inv√°lidos encontrados!')
            exit(1)
        else:
            print('üéâ Todos os notebooks s√£o v√°lidos!')
        "
